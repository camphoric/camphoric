version: "3.9"

volumes:
    db:

services:
  postgres:
    image: postgres:13
    env_file:
      - ./env/local/shared.env
      - ./env/local/postgres.env
    ports:
      - "5434:5432"
    volumes:
      - db:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "runuser", "-c", "$POSTGRES_USER", "-c", "/usr/bin/pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 3

  django:
    env_file:
      - ./env/local/shared.env
      - ./env/local/postgres.env
      - ./env/local/django.env
    build: server/
    volumes:
      - ./server:/app
      - ./data:/app/fixtures
    command: >
      bash -c "./manage.py migrate &&
               ./manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:8000/api/user || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 3

  react:
    env_file:
      - ./env/local/shared.env
      - ./env/local/react.env
    build:
      context: client
      shm_size: '2gb'
    volumes:
      - ./client:/app
      - ./data:/app/fixtures
      - /app/node_modules
    ports:
      - "3000:3000"
    command: npm start
    depends_on:
      django:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:3000 || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 3

