name: Django Unit Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SECRET_KEY: not-a-real-secret-key-really-not-a-real-secret-key
  DATABASE_URL: postgres://postgres:postgres@localhost/postgres
  DEBUG: on

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    services:
      db_service:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: python -m pip install --upgrade pipenv wheel psycopg2-binary
      - name: Make build dir
        run: mkdir -p frontend_bootstrap/build/
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install --deploy --dev
      - name: Run flake8
        run: pipenv run flake8
      - name: Run Tests
        run: pipenv run python manage.py test
